// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace TodoApi.Migrations
{
    [DbContext(typeof(KundeDb))]
    partial class KundeDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Adresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("hausnr")
                        .HasColumnType("integer");

                    b.Property<string>("ort")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("plz")
                        .HasColumnType("integer");

                    b.Property<string>("strasse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Adresse");
                });

            modelBuilder.Entity("Kunde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("adresseId")
                        .HasColumnType("integer");

                    b.Property<string>("nachname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("tel")
                        .HasColumnType("integer");

                    b.Property<string>("vorname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("adresseId");

                    b.ToTable("kunden");
                });

            modelBuilder.Entity("Kunde", b =>
                {
                    b.HasOne("Adresse", "adresse")
                        .WithMany()
                        .HasForeignKey("adresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("adresse");
                });
#pragma warning restore 612, 618
        }
    }
}
